{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","actionType","formReduser","state","action","console","log","email","payload","isEamilValid","includes","password","isPasswordValid","trim","length","Login","useReducer","isEmailValid","isFormValid","formState","dispatchForm","login","onSubmit","event","preventDefault","onLogin","control","invalid","htmlFor","id","value","onChange","target","onBlur","autoComplete","actions","btn","Home","home","Navigation","nav","isLoggedIn","onLogout","MainHeader","isAuthenticated","App","useState","setIsLoggedIn","logoutHandler","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.302408f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__u3zdV\",\"control\":\"Login_control__1dBGn\",\"invalid\":\"Login_invalid__3JeH7\",\"actions\":\"Login_actions__kYD_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1nlQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3MY5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3Y86X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1MYcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__2zysR\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst actionType = {\n  change_Email_value: \"change_Email_value\",\n  change_Email_value_Validation: \"change_Email_value_Validation\",\n  change_password_value: \"change_password_value\",\n  change_password_value_Validation: \"change_password_value_Validation\",\n};\n\nconst formReduser = (state, action) => {\n  console.log(action);\n  if (action.type === actionType.change_Email_value) {\n    return {\n      ...state,\n      email: action.payload,\n    };\n  }\n  if (action.type === actionType.change_Email_value_Validation) {\n    return {\n      ...state,\n      isEamilValid: state.email.includes(\"@\"),\n    };\n  }\n  if (action.type === actionType.change_password_value) {\n    return {\n      ...state,\n      password: action.payload,\n    };\n  }\n  if (action.type === actionType.change_password_value_Validation) {\n    return {\n      ...state,\n      isPasswordValid: state.password.trim().length > 6,\n    };\n  }\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const [formState, dispatchForm] = useReducer(formReduser, {\n    email: \"\",\n    isEmailValid: true,\n    password: \"\",\n    isPasswordValid: true,\n    isFormValid: false,\n  });\n\n  // console.log(formReduser);\n  // console.log(dispatchForm);\n\n  const emailChangeHandler = (event) => {\n    dispatchForm({\n      type: actionType.change_Email_value,\n      payload: event.target.value,\n    });\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchForm({\n      type: actionType.change_password_value,\n      payload: event.target.value,\n    });\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchForm({\n      type: actionType.change_Email_value_Validation,\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchForm({\n      type: actionType.change_password_value_Validation,\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(formState.email, formState.password);\n  };\n\n  const isFormValid = () => {\n    return (\n      formState.email.includes(\"@\") && formState.password.trim().length > 6\n    );\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            formState.isEmailValid ? \"\" : classes.invalid\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={formState.email}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            formState.isPasswordValid ? \"\" : classes.invalid\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"true\"\n            value={formState.password}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button\n            type=\"submit\"\n            className={classes.btn}\n            disabled={!isFormValid()}\n          >\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {/* {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )} */}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}